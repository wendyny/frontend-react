[{"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\index.js":"1","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\reportWebVitals.js":"2","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\App.js":"3","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Components\\Header\\index.js":"4","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Components\\Container\\index.js":"5","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\estudiante\\index.js":"6","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\curso\\index.js":"7","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\pais\\index.js":"8","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\estudiante\\estudianteForm.js":"9","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\curso\\cursoForm.js":"10","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Services\\restClient.js":"11","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\pais\\paisForm.js":"12"},{"size":567,"mtime":1607488445259,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":284,"mtime":1607575667591,"results":"16","hashOfConfig":"14"},{"size":186,"mtime":1607490182391,"results":"17","hashOfConfig":"14"},{"size":2001,"mtime":1608168729713,"results":"18","hashOfConfig":"14"},{"size":8339,"mtime":1608163747110,"results":"19","hashOfConfig":"14"},{"size":7310,"mtime":1607619424568,"results":"20","hashOfConfig":"14"},{"size":7269,"mtime":1608168433999,"results":"21","hashOfConfig":"14"},{"size":5956,"mtime":1608167517496,"results":"22","hashOfConfig":"14"},{"size":3217,"mtime":1607617895486,"results":"23","hashOfConfig":"14"},{"size":1695,"mtime":1608162977297,"results":"24","hashOfConfig":"14"},{"size":3197,"mtime":1608166009950,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"3dhxe3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\index.js",[],["55","56"],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\reportWebVitals.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\App.js",["57"],"import logo from './logo.svg';\nimport './App.css';\nimport { Header } from './Components/Header';\nimport {ContainerMain} from './Components/Container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <ContainerMain/>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Components\\Header\\index.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Components\\Container\\index.js",["58"],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\estudiante\\index.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\curso\\index.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\pais\\index.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\estudiante\\estudianteForm.js",["59"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { Dropdown, PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\r\nimport { restClient } from '../../Services/restClient';\r\n\r\nconst generos = [{ key: 'F', text: 'F' }, { key: 'M', text: 'M' }];\r\n\r\nexport const EstudianteForm = ({ fetchEstudiantes, estudianteSeleccionado, acccion, onDismiss }) => {\r\n    const [estudiante, setEstudiante] = useState({\r\n        id: acccion === 'Edit' ? estudianteSeleccionado.id : 0,\r\n        nombre: acccion === 'Edit' ? estudianteSeleccionado.nombre : '',\r\n        sexo: acccion === 'Edit' ? estudianteSeleccionado.sexo : '',\r\n        edad: acccion === 'Edit' ? estudianteSeleccionado.edad : 0,\r\n        cursoId: acccion === 'Edit' ? estudianteSeleccionado.cursoId : 0,\r\n        paisId: acccion === 'Edit' ? estudianteSeleccionado.paisId : 0\r\n\r\n    });\r\n\r\n    const [mensajeValidacion, setMensajeValidacion] = useState('');\r\n    const [errorCampo, setErrorCampo] = useState({\r\n        nombre: '',\r\n        sexo: '',\r\n        edad: '',\r\n        cursoId: '',\r\n        paisId:''\r\n    });\r\n\r\n    const [cursos, setCursos] = useState([]);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchCursos = async () => {\r\n            const response = await restClient.httpGet('/curso');\r\n\r\n            if (response && response.length) {\r\n                setCursos(response.map(curso => ({\r\n                    key: curso.id,\r\n                    text: curso.nombre\r\n                })))\r\n            }\r\n        }\r\n\r\n        fetchCursos();\r\n    }, []);\r\n    \r\n    const [paises, setPaises] = useState([]);\r\n     useEffect(() => {\r\n        const fetchPaises = async () => {\r\n            const response = await restClient.httpGet('/pais');\r\n\r\n            if (response && response.length) {\r\n                setPaises(response.map(pais => ({\r\n                    key: pais.id,\r\n                    text: pais.nombre\r\n                })))\r\n            }\r\n        }\r\n\r\n        fetchPaises();\r\n    }, []);\r\n    const handleTextFieldChange = prop => (event, value) => {\r\n        setEstudiante({ ...estudiante, [prop]: value })\r\n    }\r\n\r\n    const handleSelectedCursoChange = (event, option) => {\r\n        setEstudiante({ ...estudiante, cursoId: option.key });\r\n    }\r\n    const handleSelectedPaisChange = (event, option) => {\r\n        setEstudiante({ ...estudiante, paisId: option.key });\r\n    }\r\n    const handleSelectedSexoChange = (event, option) => {\r\n        setEstudiante({ ...estudiante, sexo: option.key });\r\n    }\r\n\r\n    const validandoCampos = () => {\r\n        let mensaje = {};\r\n\r\n        if (!estudiante.nombre) {\r\n            mensaje = { ...mensaje, nombre: 'Ingrese nombre' };\r\n        }\r\n\r\n        if (estudiante.edad < 18) {\r\n            mensaje = { ...mensaje, edad: 'Edad debe sera mayor o igual a 18' };\r\n        }\r\n\r\n        if (!estudiante.sexo) {\r\n            mensaje = { ...mensaje, sexo: 'Seleccione un genero...' };\r\n        }\r\n\r\n        if (!estudiante.cursoId) {\r\n            mensaje = { ...mensaje, cursoId: 'Seleccione un curso...' };\r\n        }\r\n        if (!estudiante.paisId) {\r\n            mensaje = { ...mensaje, paisId: 'Seleccione un pais...' };\r\n        }\r\n\r\n        setErrorCampo(mensaje);\r\n\r\n        return Object.keys(mensaje).length;\r\n    }\r\n\r\n\r\n    const handleGuardarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true); //activar spinner\r\n\r\n        const response = await restClient.httpPost('/Estudiante', estudiante);\r\n\r\n        if (typeof response === 'string') {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        if (typeof response == \"object\") {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchEstudiantes();\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    const handleEditarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true);\r\n\r\n        const url = `/Estudiante/${estudianteSeleccionado.id}`;\r\n\r\n        const response = await restClient.httpPut(url, estudiante);\r\n\r\n        if (response == 'success') {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchEstudiantes();\r\n        } else {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {showSpinner && <ProgressIndicator label=\"Guardando...\" />}\r\n\r\n            <TextField label=\"Nombre\"\r\n                value={estudiante.nombre}\r\n                onChange={handleTextFieldChange('nombre')}\r\n                errorMessage={errorCampo.nombre} />\r\n\r\n            <TextField type=\"Number\" label=\"Edad\"\r\n                value={estudiante.edad}\r\n                onChange={handleTextFieldChange('edad')}\r\n                errorMessage={errorCampo.edad} />\r\n\r\n            <Dropdown label=\"Seleccione un curso\"\r\n                options={cursos}\r\n                selectedKey={estudiante.cursoId}\r\n                onChange={handleSelectedCursoChange}\r\n                errorMessage={errorCampo.cursoId} />\r\n\r\n            <Dropdown label=\"Seleccione un pais\"\r\n                options={paises}\r\n                selectedKey={estudiante.paisId}\r\n                onChange={handleSelectedPaisChange}\r\n                errorMessage={errorCampo.paisId} />\r\n\r\n            <Dropdown label=\"Seleccione un género\"\r\n                options={generos}\r\n                selectedKey={estudiante.sexo}\r\n                onChange={handleSelectedSexoChange}\r\n                errorMessage={errorCampo.sexo} />\r\n\r\n            <br />\r\n\r\n            <PrimaryButton text=\"Guardar\" onClick={acccion === 'New' ? handleGuardarClick : handleEditarClick} />\r\n\r\n            <br />\r\n\r\n            <span style={{ color: mensajeValidacion === 'Saved' ? 'green' : 'red' }}>{mensajeValidacion}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\curso\\cursoForm.js",["60","61","62"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { Dropdown, PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\r\nimport { restClient } from '../../Services/restClient';\r\n\r\n\r\nexport const CursoForm = ({ fetchCursos, cursoSeleccionado, acccion, onDismiss }) => {\r\n    const [curso, setCurso] = useState({\r\n        Id: acccion === 'Edit' ? cursoSeleccionado.Id : 0,\r\n        Nombre: acccion === 'Edit' ? cursoSeleccionado.Nombre : ''  \r\n    });\r\n\r\n    const [mensajeValidacion, setMensajeValidacion] = useState('');\r\n    const [errorCampo, setErrorCampo] = useState({\r\n        Nombre: ''\r\n        \r\n    });\r\n\r\n    const [cursos, setCursos] = useState([]);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchCursos = async () => {\r\n            const response = await restClient.httpGet('/curso');\r\n\r\n            if (response && response.length) {\r\n                setCursos(response.map(curso => ({\r\n                    key: curso.Id,\r\n                    text: curso.Nombre\r\n                })))\r\n            }\r\n        }\r\n\r\n        fetchCursos();\r\n    }, []);\r\n\r\n    const handleTextFieldChange = prop => (event, value) => {\r\n        setCurso({ ...curso, [prop]: value })\r\n    }\r\n    \r\n\r\n    const validandoCampos = () => {\r\n        let mensaje = {};\r\n\r\n        if (!curso.Nombre) {\r\n            mensaje = { ...mensaje, nombre: 'Ingrese un nombre para el curso ' };\r\n        }\r\n\r\n        \r\n        setErrorCampo(mensaje);\r\n\r\n        return Object.keys(mensaje).length;\r\n    }\r\n\r\n\r\n    const handleGuardarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true); //activar spinner\r\n\r\n        const response = await restClient.httpPost('/curso', curso);\r\n\r\n        if (typeof response === 'string') {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        if (typeof response == \"object\") {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchCursos();\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    const handleEditarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true);\r\n\r\n        const url = `/curso/${cursoSeleccionado.Id}`;\r\n\r\n        const response = await restClient.httpPut(url, curso);\r\n\r\n        if (response == 'success') {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchCursos();\r\n        } else {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {showSpinner && <ProgressIndicator label=\"Guardando...\" />}\r\n\r\n            <TextField label=\"Nombre\"\r\n                value={curso.Nombre}\r\n                onChange={handleTextFieldChange('Nombre')}\r\n                errorMessage={errorCampo.Nombre} />\r\n            <br />\r\n\r\n            <PrimaryButton text=\"Guardar\" onClick={acccion === 'New' ? handleGuardarClick : handleEditarClick} />\r\n\r\n            <br />\r\n\r\n            <span style={{ color: mensajeValidacion === 'Saved' ? 'green' : 'red' }}>{mensajeValidacion}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Services\\restClient.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\pais\\paisForm.js",["63","64","65"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { Dropdown, PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\r\nimport { restClient } from '../../Services/restClient';\r\n\r\n\r\nexport const PaisForm = ({ fetchPaises, paisSeleccionado, acccion, onDismiss }) => {\r\n    const [pais, setPais] = useState({\r\n        Id: acccion === 'Edit' ? paisSeleccionado.Id : 0,\r\n        Nombre: acccion === 'Edit' ? paisSeleccionado.Nombre : ''  \r\n    });\r\n\r\n    const [mensajeValidacion, setMensajeValidacion] = useState('');\r\n    const [errorCampo, setErrorCampo] = useState({\r\n        Nombre: ''\r\n        \r\n    });\r\n\r\n    const [paises, setPaises] = useState([]);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchPaises = async () => {\r\n            const response = await restClient.httpGet('/pais');\r\n\r\n            if (response && response.length) {\r\n                setPaises(response.map(pais => ({\r\n                    key: pais.Id,\r\n                    text: pais.Nombre\r\n                })))\r\n            }\r\n        }\r\n\r\n        fetchPaises();\r\n    }, []);\r\n\r\n    const handleTextFieldChange = prop => (event, value) => {\r\n        setPais({ ...pais, [prop]: value })\r\n    }\r\n    \r\n\r\n    const validandoCampos = () => {\r\n        let mensaje = {};\r\n\r\n        if (!pais.Nombre) {\r\n            mensaje = { ...mensaje, nombre: 'Ingrese un nombre para el pais ' };\r\n        }\r\n\r\n        \r\n        setErrorCampo(mensaje);\r\n\r\n        return Object.keys(mensaje).length;\r\n    }\r\n\r\n\r\n    const handleGuardarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true); //activar spinner\r\n\r\n        const response = await restClient.httpPost('/pais', pais);\r\n\r\n        if (typeof response === 'string') {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        if (typeof response == \"object\") {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchPaises();\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    const handleEditarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true);\r\n\r\n        const url = `/pais/${paisSeleccionado.Id}`;\r\n\r\n        const response = await restClient.httpPut(url, pais);\r\n\r\n        if (response == 'success') {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchPaises();\r\n        } else {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {showSpinner && <ProgressIndicator label=\"Guardando...\" />}\r\n\r\n            <TextField label=\"Nombre\"\r\n                value={pais.Nombre}\r\n                onChange={handleTextFieldChange('Nombre')}\r\n                errorMessage={errorCampo.Nombre} />\r\n            <br />\r\n\r\n            <PrimaryButton text=\"Guardar\" onClick={acccion === 'New' ? handleGuardarClick : handleEditarClick} />\r\n\r\n            <br />\r\n\r\n            <span style={{ color: mensajeValidacion === 'Saved' ? 'green' : 'red' }}>{mensajeValidacion}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":8,"nodeType":"72","messageId":"73","endLine":1,"endColumn":12},{"ruleId":"70","severity":1,"message":"74","line":3,"column":49,"nodeType":"72","messageId":"73","endLine":3,"endColumn":53},{"ruleId":"75","severity":1,"message":"76","line":137,"column":22,"nodeType":"77","messageId":"78","endLine":137,"endColumn":24},{"ruleId":"70","severity":1,"message":"79","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":18},{"ruleId":"70","severity":1,"message":"80","line":19,"column":12,"nodeType":"72","messageId":"73","endLine":19,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":90,"column":22,"nodeType":"77","messageId":"78","endLine":90,"endColumn":24},{"ruleId":"70","severity":1,"message":"79","line":3,"column":10,"nodeType":"72","messageId":"73","endLine":3,"endColumn":18},{"ruleId":"70","severity":1,"message":"81","line":19,"column":12,"nodeType":"72","messageId":"73","endLine":19,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":90,"column":22,"nodeType":"77","messageId":"78","endLine":90,"endColumn":24},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Dropdown' is defined but never used.","'cursos' is assigned a value but never used.","'paises' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]