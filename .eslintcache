[{"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\index.js":"1","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\reportWebVitals.js":"2","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\App.js":"3","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Components\\Header\\index.js":"4","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Components\\Container\\index.js":"5","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\estudiante\\index.js":"6","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\curso\\index.js":"7","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\pais\\index.js":"8","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\estudiante\\estudianteForm.js":"9","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\curso\\cursoForm.js":"10","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Services\\restClient.js":"11","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\pais\\paisForm.js":"12","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\Asignatura\\index.js":"13","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\Asignatura\\asignaturaForm.js":"14","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\asignatura\\index.js":"15","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\asignatura\\asignaturaForm.js":"16","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\docente\\index.js":"17","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\docente\\docenteForm.js":"18","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\login\\index.js":"19","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\usuario\\index.js":"20","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\usuario\\usuarioForm.js":"21"},{"size":568,"mtime":1608188300234,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":566,"mtime":1608189674716,"results":"25","hashOfConfig":"23"},{"size":194,"mtime":1608185890583,"results":"26","hashOfConfig":"23"},{"size":3310,"mtime":1608247646425,"results":"27","hashOfConfig":"23"},{"size":8335,"mtime":1608185828046,"results":"28","hashOfConfig":"23"},{"size":7310,"mtime":1607619424568,"results":"29","hashOfConfig":"23"},{"size":7269,"mtime":1608168433999,"results":"30","hashOfConfig":"23"},{"size":5956,"mtime":1608167517496,"results":"31","hashOfConfig":"23"},{"size":3217,"mtime":1607617895486,"results":"32","hashOfConfig":"23"},{"size":1707,"mtime":1608191608625,"results":"33","hashOfConfig":"23"},{"size":3197,"mtime":1608166009950,"results":"34","hashOfConfig":"23"},{"size":7863,"mtime":1608181639034,"results":"35","hashOfConfig":"23"},{"size":3862,"mtime":1608182537790,"results":"36","hashOfConfig":"23"},{"size":7863,"mtime":1608181639034,"results":"37","hashOfConfig":"23"},{"size":3862,"mtime":1608182537790,"results":"38","hashOfConfig":"23"},{"size":7950,"mtime":1608185262276,"results":"39","hashOfConfig":"23"},{"size":4981,"mtime":1608184883784,"results":"40","hashOfConfig":"23"},{"size":1693,"mtime":1608242937100,"results":"41","hashOfConfig":"23"},{"size":7665,"mtime":1608250579761,"results":"42","hashOfConfig":"23"},{"size":4510,"mtime":1608253194729,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"3dhxe3",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\index.js",[],["94","95"],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\reportWebVitals.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\App.js",["96","97"],"import logo from './logo.svg';\nimport './App.css';\nimport {  Login} from './Containers/login';\nimport {ContainerMain} from './Components/Container';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <Route path=\"/containers\" component={ContainerMain} />\n          <Route exact path=\"/\" component={Login} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Components\\Header\\index.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Components\\Container\\index.js",["98"],"import {Nav} from '@fluentui/react';\r\nimport React from 'react'\r\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\nimport { Estudiante } from '../../Containers/estudiante';\r\nimport { Curso } from '../../Containers/curso';\r\nimport { Pais } from '../../Containers/pais';\r\nimport { Asignatura } from '../../Containers/asignatura';\r\nimport { Docente } from '../../Containers/docente';\r\nimport { Usuario } from '../../Containers/usuario';\r\nimport './container.css'\r\nimport { Header } from '../Header';\r\n\r\n    export const ContainerMain=()=>{\r\n        const handleNavClick = () => {\r\n\r\n        }\r\n    \r\n        return(\r\n            <div className=\"container\">\r\n               <Header/>\r\n            <Nav\r\n                onLinkClick={handleNavClick}\r\n                selectedKey=\"key3\"\r\n                ariaLabel=\"Nav basic example\"\r\n                styles={{\r\n                    root: {\r\n                        width: 210,\r\n                        height: '100%',\r\n                        boxSizing: 'border-box',\r\n                        border: '1px solid #eee',\r\n                        overflowY: 'auto',\r\n                    },\r\n                }}\r\n                    groups={[{\r\n                        links:[{\r\n                            name: 'Estudiantes',\r\n                            url: '/containers/estudiantes',\r\n                            icon: 'UserFollowed',\r\n                            key: 'estudiantesNav',\r\n                        },\r\n                    {\r\n                        name:'Cursos',\r\n                        url:'/containers/cursos',\r\n                        icon:'News',\r\n                        key:'cursosNav',\r\n                    },\r\n                    {\r\n                        name:'Paises',\r\n                        url:'/containers/paises',\r\n                        icon:'world',\r\n                        key:'paisesNav',\r\n                    },\r\n                    {\r\n                        name:'Asignaturas',\r\n                        url:'/containers/asignaturas',\r\n                        icon:'Dictionary',\r\n                        key:'asignaturasNav',\r\n                    },\r\n                    {\r\n                            name:'Docentes',\r\n                            url:'/containers/docentes',\r\n                            icon:'ManagerSelfService',\r\n                            key:'docentesNav',\r\n                    },\r\n                    {\r\n                        name:'Usuarios',\r\n                        url:'/containers/usuarios',\r\n                        icon:'FabricUserFolder',\r\n                        key:'usuariosNav',\r\n                    },]\r\n                    }]}\r\n            />\r\n            <Router>\r\n                <Switch>\r\n                    <Route path=\"/containers/estudiantes\" component={Estudiante} />\r\n                    <Route path=\"/containers/cursos\" component={Curso} />\r\n                    <Route path=\"/containers/paises\" component={Pais} />\r\n                    <Route path=\"/containers/asignaturas\" component={Asignatura} />\r\n                    <Route path=\"/containers/docentes\" component={Docente} />\r\n                    <Route path=\"/containers/usuarios\" component={Usuario} />\r\n\r\n                </Switch>\r\n            </Router>\r\n            </div>\r\n        )\r\n    }","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\estudiante\\index.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\curso\\index.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\pais\\index.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\estudiante\\estudianteForm.js",["99"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { Dropdown, PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\r\nimport { restClient } from '../../Services/restClient';\r\n\r\nconst generos = [{ key: 'F', text: 'F' }, { key: 'M', text: 'M' }];\r\n\r\nexport const EstudianteForm = ({ fetchEstudiantes, estudianteSeleccionado, acccion, onDismiss }) => {\r\n    const [estudiante, setEstudiante] = useState({\r\n        id: acccion === 'Edit' ? estudianteSeleccionado.id : 0,\r\n        nombre: acccion === 'Edit' ? estudianteSeleccionado.nombre : '',\r\n        sexo: acccion === 'Edit' ? estudianteSeleccionado.sexo : '',\r\n        edad: acccion === 'Edit' ? estudianteSeleccionado.edad : 0,\r\n        cursoId: acccion === 'Edit' ? estudianteSeleccionado.cursoId : 0,\r\n        paisId: acccion === 'Edit' ? estudianteSeleccionado.paisId : 0\r\n\r\n    });\r\n\r\n    const [mensajeValidacion, setMensajeValidacion] = useState('');\r\n    const [errorCampo, setErrorCampo] = useState({\r\n        nombre: '',\r\n        sexo: '',\r\n        edad: '',\r\n        cursoId: '',\r\n        paisId:''\r\n    });\r\n\r\n    const [cursos, setCursos] = useState([]);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchCursos = async () => {\r\n            const response = await restClient.httpGet('/curso');\r\n\r\n            if (response && response.length) {\r\n                setCursos(response.map(curso => ({\r\n                    key: curso.id,\r\n                    text: curso.nombre\r\n                })))\r\n            }\r\n        }\r\n\r\n        fetchCursos();\r\n    }, []);\r\n    \r\n    const [paises, setPaises] = useState([]);\r\n     useEffect(() => {\r\n        const fetchPaises = async () => {\r\n            const response = await restClient.httpGet('/pais');\r\n\r\n            if (response && response.length) {\r\n                setPaises(response.map(pais => ({\r\n                    key: pais.id,\r\n                    text: pais.nombre\r\n                })))\r\n            }\r\n        }\r\n\r\n        fetchPaises();\r\n    }, []);\r\n    const handleTextFieldChange = prop => (event, value) => {\r\n        setEstudiante({ ...estudiante, [prop]: value })\r\n    }\r\n\r\n    const handleSelectedCursoChange = (event, option) => {\r\n        setEstudiante({ ...estudiante, cursoId: option.key });\r\n    }\r\n    const handleSelectedPaisChange = (event, option) => {\r\n        setEstudiante({ ...estudiante, paisId: option.key });\r\n    }\r\n    const handleSelectedSexoChange = (event, option) => {\r\n        setEstudiante({ ...estudiante, sexo: option.key });\r\n    }\r\n\r\n    const validandoCampos = () => {\r\n        let mensaje = {};\r\n\r\n        if (!estudiante.nombre) {\r\n            mensaje = { ...mensaje, nombre: 'Ingrese nombre' };\r\n        }\r\n\r\n        if (estudiante.edad < 18) {\r\n            mensaje = { ...mensaje, edad: 'Edad debe sera mayor o igual a 18' };\r\n        }\r\n\r\n        if (!estudiante.sexo) {\r\n            mensaje = { ...mensaje, sexo: 'Seleccione un genero...' };\r\n        }\r\n\r\n        if (!estudiante.cursoId) {\r\n            mensaje = { ...mensaje, cursoId: 'Seleccione un curso...' };\r\n        }\r\n        if (!estudiante.paisId) {\r\n            mensaje = { ...mensaje, paisId: 'Seleccione un pais...' };\r\n        }\r\n\r\n        setErrorCampo(mensaje);\r\n\r\n        return Object.keys(mensaje).length;\r\n    }\r\n\r\n\r\n    const handleGuardarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true); //activar spinner\r\n\r\n        const response = await restClient.httpPost('/Estudiante', estudiante);\r\n\r\n        if (typeof response === 'string') {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        if (typeof response == \"object\") {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchEstudiantes();\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    const handleEditarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true);\r\n\r\n        const url = `/Estudiante/${estudianteSeleccionado.id}`;\r\n\r\n        const response = await restClient.httpPut(url, estudiante);\r\n\r\n        if (response == 'success') {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchEstudiantes();\r\n        } else {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {showSpinner && <ProgressIndicator label=\"Guardando...\" />}\r\n\r\n            <TextField label=\"Nombre\"\r\n                value={estudiante.nombre}\r\n                onChange={handleTextFieldChange('nombre')}\r\n                errorMessage={errorCampo.nombre} />\r\n\r\n            <TextField type=\"Number\" label=\"Edad\"\r\n                value={estudiante.edad}\r\n                onChange={handleTextFieldChange('edad')}\r\n                errorMessage={errorCampo.edad} />\r\n\r\n            <Dropdown label=\"Seleccione un curso\"\r\n                options={cursos}\r\n                selectedKey={estudiante.cursoId}\r\n                onChange={handleSelectedCursoChange}\r\n                errorMessage={errorCampo.cursoId} />\r\n\r\n            <Dropdown label=\"Seleccione un pais\"\r\n                options={paises}\r\n                selectedKey={estudiante.paisId}\r\n                onChange={handleSelectedPaisChange}\r\n                errorMessage={errorCampo.paisId} />\r\n\r\n            <Dropdown label=\"Seleccione un género\"\r\n                options={generos}\r\n                selectedKey={estudiante.sexo}\r\n                onChange={handleSelectedSexoChange}\r\n                errorMessage={errorCampo.sexo} />\r\n\r\n            <br />\r\n\r\n            <PrimaryButton text=\"Guardar\" onClick={acccion === 'New' ? handleGuardarClick : handleEditarClick} />\r\n\r\n            <br />\r\n\r\n            <span style={{ color: mensajeValidacion === 'Saved' ? 'green' : 'red' }}>{mensajeValidacion}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\curso\\cursoForm.js",["100","101","102"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { Dropdown, PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\r\nimport { restClient } from '../../Services/restClient';\r\n\r\n\r\nexport const CursoForm = ({ fetchCursos, cursoSeleccionado, acccion, onDismiss }) => {\r\n    const [curso, setCurso] = useState({\r\n        Id: acccion === 'Edit' ? cursoSeleccionado.Id : 0,\r\n        Nombre: acccion === 'Edit' ? cursoSeleccionado.Nombre : ''  \r\n    });\r\n\r\n    const [mensajeValidacion, setMensajeValidacion] = useState('');\r\n    const [errorCampo, setErrorCampo] = useState({\r\n        Nombre: ''\r\n        \r\n    });\r\n\r\n    const [cursos, setCursos] = useState([]);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchCursos = async () => {\r\n            const response = await restClient.httpGet('/curso');\r\n\r\n            if (response && response.length) {\r\n                setCursos(response.map(curso => ({\r\n                    key: curso.Id,\r\n                    text: curso.Nombre\r\n                })))\r\n            }\r\n        }\r\n\r\n        fetchCursos();\r\n    }, []);\r\n\r\n    const handleTextFieldChange = prop => (event, value) => {\r\n        setCurso({ ...curso, [prop]: value })\r\n    }\r\n    \r\n\r\n    const validandoCampos = () => {\r\n        let mensaje = {};\r\n\r\n        if (!curso.Nombre) {\r\n            mensaje = { ...mensaje, nombre: 'Ingrese un nombre para el curso ' };\r\n        }\r\n\r\n        \r\n        setErrorCampo(mensaje);\r\n\r\n        return Object.keys(mensaje).length;\r\n    }\r\n\r\n\r\n    const handleGuardarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true); //activar spinner\r\n\r\n        const response = await restClient.httpPost('/curso', curso);\r\n\r\n        if (typeof response === 'string') {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        if (typeof response == \"object\") {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchCursos();\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    const handleEditarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true);\r\n\r\n        const url = `/curso/${cursoSeleccionado.Id}`;\r\n\r\n        const response = await restClient.httpPut(url, curso);\r\n\r\n        if (response == 'success') {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchCursos();\r\n        } else {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {showSpinner && <ProgressIndicator label=\"Guardando...\" />}\r\n\r\n            <TextField label=\"Nombre\"\r\n                value={curso.Nombre}\r\n                onChange={handleTextFieldChange('Nombre')}\r\n                errorMessage={errorCampo.Nombre} />\r\n            <br />\r\n\r\n            <PrimaryButton text=\"Guardar\" onClick={acccion === 'New' ? handleGuardarClick : handleEditarClick} />\r\n\r\n            <br />\r\n\r\n            <span style={{ color: mensajeValidacion === 'Saved' ? 'green' : 'red' }}>{mensajeValidacion}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Services\\restClient.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\pais\\paisForm.js",["103","104","105"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { Dropdown, PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\r\nimport { restClient } from '../../Services/restClient';\r\n\r\n\r\nexport const PaisForm = ({ fetchPaises, paisSeleccionado, acccion, onDismiss }) => {\r\n    const [pais, setPais] = useState({\r\n        Id: acccion === 'Edit' ? paisSeleccionado.Id : 0,\r\n        Nombre: acccion === 'Edit' ? paisSeleccionado.Nombre : ''  \r\n    });\r\n\r\n    const [mensajeValidacion, setMensajeValidacion] = useState('');\r\n    const [errorCampo, setErrorCampo] = useState({\r\n        Nombre: ''\r\n        \r\n    });\r\n\r\n    const [paises, setPaises] = useState([]);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchPaises = async () => {\r\n            const response = await restClient.httpGet('/pais');\r\n\r\n            if (response && response.length) {\r\n                setPaises(response.map(pais => ({\r\n                    key: pais.Id,\r\n                    text: pais.Nombre\r\n                })))\r\n            }\r\n        }\r\n\r\n        fetchPaises();\r\n    }, []);\r\n\r\n    const handleTextFieldChange = prop => (event, value) => {\r\n        setPais({ ...pais, [prop]: value })\r\n    }\r\n    \r\n\r\n    const validandoCampos = () => {\r\n        let mensaje = {};\r\n\r\n        if (!pais.Nombre) {\r\n            mensaje = { ...mensaje, nombre: 'Ingrese un nombre para el pais ' };\r\n        }\r\n\r\n        \r\n        setErrorCampo(mensaje);\r\n\r\n        return Object.keys(mensaje).length;\r\n    }\r\n\r\n\r\n    const handleGuardarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true); //activar spinner\r\n\r\n        const response = await restClient.httpPost('/pais', pais);\r\n\r\n        if (typeof response === 'string') {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        if (typeof response == \"object\") {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchPaises();\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    const handleEditarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true);\r\n\r\n        const url = `/pais/${paisSeleccionado.Id}`;\r\n\r\n        const response = await restClient.httpPut(url, pais);\r\n\r\n        if (response == 'success') {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchPaises();\r\n        } else {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {showSpinner && <ProgressIndicator label=\"Guardando...\" />}\r\n\r\n            <TextField label=\"Nombre\"\r\n                value={pais.Nombre}\r\n                onChange={handleTextFieldChange('Nombre')}\r\n                errorMessage={errorCampo.Nombre} />\r\n            <br />\r\n\r\n            <PrimaryButton text=\"Guardar\" onClick={acccion === 'New' ? handleGuardarClick : handleEditarClick} />\r\n\r\n            <br />\r\n\r\n            <span style={{ color: mensajeValidacion === 'Saved' ? 'green' : 'red' }}>{mensajeValidacion}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\Asignatura\\index.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\Asignatura\\asignaturaForm.js",["106"],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\asignatura\\index.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\asignatura\\asignaturaForm.js",["107"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { Dropdown, PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\r\nimport { restClient } from '../../Services/restClient';\r\n\r\n\r\n\r\nexport const AsignaturaForm = ({ fetchAsignaturas, asignaturaSeleccionado, acccion, onDismiss }) => {\r\n    const [asignatura, setAsignatura] = useState({\r\n        id: acccion === 'Edit' ? asignaturaSeleccionado.id : 0,\r\n        nombre: acccion === 'Edit' ? asignaturaSeleccionado.nombre : '',\r\n        cursoId: acccion === 'Edit' ? asignaturaSeleccionado.cursoId : 0\r\n    });\r\n\r\n    const [mensajeValidacion, setMensajeValidacion] = useState('');\r\n    const [errorCampo, setErrorCampo] = useState({\r\n        nombre: '',\r\n        cursoId: ''\r\n    });\r\n\r\n    const [cursos, setCursos] = useState([]);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchCursos = async () => {\r\n            const response = await restClient.httpGet('/curso');\r\n\r\n            if (response && response.length) {\r\n                setCursos(response.map(curso => ({\r\n                    key: curso.id,\r\n                    text: curso.nombre\r\n                })))\r\n            }\r\n        }\r\n\r\n        fetchCursos();\r\n    }, []);\r\n\r\n    const handleTextFieldChange = prop => (event, value) => {\r\n        setAsignatura({ ...asignatura, [prop]: value })\r\n    }\r\n\r\n    const handleSelectedCursoChange = (event, option) => {\r\n        setAsignatura({ ...asignatura, cursoId: option.key });\r\n    }\r\n   \r\n\r\n    const validandoCampos = () => {\r\n        let mensaje = {};\r\n\r\n        if (!asignatura.nombre) {\r\n            mensaje = { ...mensaje, nombre: 'Ingrese nombre' };\r\n        }\r\n        if (!asignatura.cursoId) {\r\n            mensaje = { ...mensaje, cursoId: 'Seleccione un curso...' };\r\n        }\r\n      setErrorCampo(mensaje);\r\n\r\n        return Object.keys(mensaje).length;\r\n    }\r\n\r\n\r\n    const handleGuardarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true); //activar spinner\r\n\r\n        const response = await restClient.httpPost('/Asignatura', asignatura);\r\n\r\n        if (typeof response === 'string') {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        if (typeof response == \"object\") {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchAsignaturas();\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    const handleEditarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true);\r\n\r\n        const url = `/Asignatura/${asignaturaSeleccionado.id}`;\r\n\r\n        const response = await restClient.httpPut(url, asignatura);\r\n\r\n        if (response == 'success') {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchAsignaturas();\r\n        } else {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {showSpinner && <ProgressIndicator label=\"Guardando...\" />}\r\n\r\n            <TextField label=\"Nombre\"\r\n                value={asignatura.nombre}\r\n                onChange={handleTextFieldChange('nombre')}\r\n                errorMessage={errorCampo.nombre} />\r\n\r\n            <Dropdown label=\"Seleccione un curso\"\r\n                options={cursos}\r\n                selectedKey={asignatura.cursoId}\r\n                onChange={handleSelectedCursoChange}\r\n                errorMessage={errorCampo.cursoId} />\r\n\r\n            <br />\r\n\r\n            <PrimaryButton text=\"Guardar\" onClick={acccion === 'New' ? handleGuardarClick : handleEditarClick} />\r\n\r\n            <br />\r\n\r\n            <span style={{ color: mensajeValidacion === 'Saved' ? 'green' : 'red' }}>{mensajeValidacion}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\docente\\index.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\docente\\docenteForm.js",["108"],"import React, { useEffect, useState } from 'react';\r\n\r\nimport { Dropdown, PrimaryButton, ProgressIndicator, TextField } from '@fluentui/react';\r\nimport { restClient } from '../../Services/restClient';\r\n\r\nconst generos = [{ key: 'F', text: 'F' }, { key: 'M', text: 'M' }];\r\n\r\nexport const DocenteForm = ({ fetchDocentes, docenteSeleccionado, acccion, onDismiss }) => {\r\n    const [docente, setDocente] = useState({\r\n        id: acccion === 'Edit' ? docenteSeleccionado.id : 0,\r\n        nombre: acccion === 'Edit' ? docenteSeleccionado.nombre : '',\r\n        sexo: acccion === 'Edit' ? docenteSeleccionado.sexo : '',\r\n        edad: acccion === 'Edit' ? docenteSeleccionado.edad : 0,\r\n        asignaturaId: acccion === 'Edit' ? docenteSeleccionado.cursoId : 0\r\n\r\n    });\r\n\r\n    const [mensajeValidacion, setMensajeValidacion] = useState('');\r\n    const [errorCampo, setErrorCampo] = useState({\r\n        nombre: '',\r\n        sexo: '',\r\n        edad: '',\r\n        asignaturaId: '' \r\n    });\r\n\r\n    const [asignaturas, setAsignaturas] = useState([]);\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchAsignaturas = async () => {\r\n            const response = await restClient.httpGet('/asignatura');\r\n\r\n            if (response && response.length) {\r\n                setAsignaturas(response.map(asignatura => ({\r\n                    key: asignatura.id,\r\n                    text: asignatura.nombre\r\n                })))\r\n            }\r\n        }\r\n\r\n        fetchAsignaturas();\r\n    }, []);\r\n    \r\n    \r\n    const handleTextFieldChange = prop => (event, value) => {\r\n        setDocente({ ...docente, [prop]: value })\r\n    }\r\n\r\n    const handleSelectedAsignaturaChange = (event, option) => {\r\n        setDocente({ ...docente, asignaturaId: option.key });\r\n    }\r\n   \r\n    const handleSelectedSexoChange = (event, option) => {\r\n        setDocente({ ...docente, sexo: option.key });\r\n    }\r\n\r\n    const validandoCampos = () => {\r\n        let mensaje = {};\r\n\r\n        if (!docente.nombre) {\r\n            mensaje = { ...mensaje, nombre: 'Ingrese nombre' };\r\n        }\r\n\r\n        if (docente.edad < 18) {\r\n            mensaje = { ...mensaje, edad: 'Edad debe sera mayor o igual a 18' };\r\n        }\r\n\r\n        if (!docente.sexo) {\r\n            mensaje = { ...mensaje, sexo: 'Seleccione un genero...' };\r\n        }\r\n\r\n        if (!docente.asignaturaId) {\r\n            mensaje = { ...mensaje, asignaturaId: 'Seleccione un asignatura...' };\r\n        }\r\n        \r\n\r\n        setErrorCampo(mensaje);\r\n\r\n        return Object.keys(mensaje).length;\r\n    }\r\n\r\n\r\n    const handleGuardarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true); //activar spinner\r\n\r\n        const response = await restClient.httpPost('/Docente', docente);\r\n\r\n        if (typeof response === 'string') {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        if (typeof response == \"object\") {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchDocentes();\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    const handleEditarClick = async () => {\r\n        if (validandoCampos()) {\r\n            return;\r\n        }\r\n\r\n        setShowSpinner(true);\r\n\r\n        const url = `/Docente/${docenteSeleccionado.id}`;\r\n\r\n        const response = await restClient.httpPut(url, docente);\r\n\r\n        if (response == 'success') {\r\n            setMensajeValidacion('Saved');\r\n\r\n            fetchDocentes();\r\n        } else {\r\n            setMensajeValidacion(response);\r\n        }\r\n\r\n        setShowSpinner(false);\r\n        onDismiss();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {showSpinner && <ProgressIndicator label=\"Guardando...\" />}\r\n\r\n            <TextField label=\"Nombre\"\r\n                value={docente.nombre}\r\n                onChange={handleTextFieldChange('nombre')}\r\n                errorMessage={errorCampo.nombre} />\r\n\r\n            <TextField type=\"Number\" label=\"Edad\"\r\n                value={docente.edad}\r\n                onChange={handleTextFieldChange('edad')}\r\n                errorMessage={errorCampo.edad} />\r\n\r\n            <Dropdown label=\"Seleccione un asignatura\"\r\n                options={asignaturas}\r\n                selectedKey={docente.asignaturaId}\r\n                onChange={handleSelectedAsignaturaChange}\r\n                errorMessage={errorCampo.asignaturaId} />\r\n\r\n           \r\n            <Dropdown label=\"Seleccione un género\"\r\n                options={generos}\r\n                selectedKey={docente.sexo}\r\n                onChange={handleSelectedSexoChange}\r\n                errorMessage={errorCampo.sexo} />\r\n\r\n            <br />\r\n\r\n            <PrimaryButton text=\"Guardar\" onClick={acccion === 'New' ? handleGuardarClick : handleEditarClick} />\r\n\r\n            <br />\r\n\r\n            <span style={{ color: mensajeValidacion === 'Saved' ? 'green' : 'red' }}>{mensajeValidacion}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\login\\index.js",[],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\usuario\\index.js",["109"],"D:\\VANGUARDIA\\REACT\\Backend\\frontend-react\\src\\Containers\\usuario\\usuarioForm.js",["110","111","112","113","114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":1,"column":8,"nodeType":"121","messageId":"122","endLine":1,"endColumn":12},{"ruleId":"119","severity":1,"message":"123","line":5,"column":50,"nodeType":"121","messageId":"122","endLine":5,"endColumn":54},{"ruleId":"119","severity":1,"message":"123","line":3,"column":49,"nodeType":"121","messageId":"122","endLine":3,"endColumn":53},{"ruleId":"124","severity":1,"message":"125","line":137,"column":22,"nodeType":"126","messageId":"127","endLine":137,"endColumn":24},{"ruleId":"119","severity":1,"message":"128","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":18},{"ruleId":"119","severity":1,"message":"129","line":19,"column":12,"nodeType":"121","messageId":"122","endLine":19,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":90,"column":22,"nodeType":"126","messageId":"127","endLine":90,"endColumn":24},{"ruleId":"119","severity":1,"message":"128","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":18},{"ruleId":"119","severity":1,"message":"130","line":19,"column":12,"nodeType":"121","messageId":"122","endLine":19,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":90,"column":22,"nodeType":"126","messageId":"127","endLine":90,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":97,"column":22,"nodeType":"126","messageId":"127","endLine":97,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":97,"column":22,"nodeType":"126","messageId":"127","endLine":97,"endColumn":24},{"ruleId":"124","severity":1,"message":"125","line":117,"column":22,"nodeType":"126","messageId":"127","endLine":117,"endColumn":24},{"ruleId":"119","severity":1,"message":"131","line":2,"column":186,"nodeType":"121","messageId":"122","endLine":2,"endColumn":194},{"ruleId":"119","severity":1,"message":"131","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":18},{"ruleId":"119","severity":1,"message":"132","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":15},{"ruleId":"119","severity":1,"message":"133","line":24,"column":12,"nodeType":"121","messageId":"122","endLine":24,"endColumn":20},{"ruleId":"124","severity":1,"message":"125","line":104,"column":22,"nodeType":"126","messageId":"127","endLine":104,"endColumn":24},{"ruleId":"119","severity":1,"message":"134","line":115,"column":11,"nodeType":"121","messageId":"122","endLine":115,"endColumn":22},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Dropdown' is defined but never used.","'cursos' is assigned a value but never used.","'paises' is assigned a value but never used.","'Checkbox' is defined but never used.","'Stack' is defined but never used.","'usuarios' is assigned a value but never used.","'stackTokens' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]